// Generated by https://quicktype.io

export interface RosterType {
  "?xml": XML;
  roster: Roster;
}

export interface XML {
  "@_version": string;
  "@_encoding": string;
  "@_standalone": string;
}

export interface Roster {
  costs: Costs;
  forces: Forces;
  "@_id": string;
  "@_name": string;
  "@_battleScribeVersion": string;
  "@_gameSystemId": string;
  "@_gameSystemName": string;
  "@_gameSystemRevision": string;
  "@_xmlns": string;
}

export interface Costs {
  cost: Cost[];
}

export interface Cost {
  "@_name": CostName;
  "@_typeId": TypeID;
  "@_value": string;
}

export enum CostName {
  Cp = "CP",
  Pl = "PL",
  Pts = "pts",
}

export enum TypeID {
  E356C76959206E14 = "e356-c769-5920-6e14",
  Points = "points",
  The2D3BB544Ad49Fb75 = "2d3b-b544-ad49-fb75",
}

export interface Forces {
  force: Force[];
}

export interface Force {
  rules: ForceRules;
  selections: ForceSelections;
  categories: ForceCategories;
  publications: Publications;
  "@_id": string;
  "@_name": string;
  "@_entryId": string;
  "@_catalogueId": string;
  "@_catalogueName": string;
  "@_catalogueRevision": string;
}

export interface ForceCategories {
  category: CategoryElement[];
}

export interface CategoryElement {
  "@_id": string;
  "@_name": string;
  "@_entryId": string;
  "@_primary": string;
}

export interface Publications {
  publication: Publication[];
}

export interface Publication {
  "@_id": string;
  "@_name": string;
}

export interface ForceRules {
  rule: RuleElement;
}

export interface RuleElement {
  description: string;
  "@_id": string;
  "@_name": RuleName;
  "@_publicationId"?: PublicationID;
  "@_hidden": string;
  "@_page"?: string;
}

export enum RuleName {
  BladeArtists = "Blade Artists",
  CombatDrugs = "Combat Drugs",
  ObjectiveSecured = "Objective Secured",
  PoisonedWeapon = "Poisoned Weapon",
  PowerFromPain = "Power From Pain",
  RaidingForcesCPRefund = "Raiding Forces - CP Refund",
}

export enum PublicationID {
  D30D3C5621B5F9A4 = "d30d-3c56-21b5-f9a4",
  The28Ec711CPubN72690 = "28ec-711c-pubN72690",
}

export interface ForceSelections {
  selection: SelectionsSelectionClass[];
}

export interface SelectionsSelectionClass {
  selections?: PurpleSelections;
  categories: PurpleCategories;
  costs: Costs;
  "@_id": string;
  "@_name": string;
  "@_entryId": string;
  "@_number": string;
  "@_type": Type;
  rules?: PurpleRules;
  profiles?: PurpleProfiles;
  "@_publicationId"?: string;
  "@_page"?: string;
}

export enum Type {
  Model = "model",
  Unit = "unit",
  Upgrade = "upgrade",
}

export interface PurpleCategories {
  category: CategoryElement[] | CategoryElement;
}

export interface PurpleProfiles {
  profile: PurpleProfile[];
}

export interface PurpleProfile {
  characteristics: PurpleCharacteristics;
  "@_id": string;
  "@_name": string;
  "@_hidden": string;
  "@_typeId": string;
  "@_typeName": TypeName;
  "@_page"?: string;
}

export enum TypeName {
  Abilities = "Abilities",
  Transport = "Transport",
  Unit = "Unit",
  Weapon = "Weapon",
}

export interface PurpleCharacteristics {
  characteristic: CharacteristicElement[] | PurpleCharacteristic;
}

export interface CharacteristicElement {
  "#text": number | string;
  "@_name": PurpleName;
  "@_typeId": string;
}

export enum PurpleName {
  A = "A",
  Abilities = "Abilities",
  Ap = "AP",
  Bs = "BS",
  D = "D",
  Ld = "Ld",
  M = "M",
  Range = "Range",
  S = "S",
  Save = "Save",
  T = "T",
  Type = "Type",
  W = "W",
  Ws = "WS",
}

export interface PurpleCharacteristic {
  "#text": string;
  "@_name": FluffyName;
  "@_typeId": string;
}

export enum FluffyName {
  Capacity = "Capacity",
  Description = "Description",
}

export interface PurpleRules {
  rule: RuleElement[] | RuleElement;
}

export interface PurpleSelections {
  selection: PurpleSelection[] | StickySelection;
}

export interface PurpleSelection {
  profiles?: FluffyProfiles;
  costs: Costs;
  "@_id": string;
  "@_name": string;
  "@_entryGroupId"?: string;
  "@_entryId": string;
  "@_number": string;
  "@_type": Type;
  categories?: FluffyCategories;
  selections?: FluffySelections;
  "@_publicationId"?: string;
  "@_page"?: string;
  rules?: ForceRules;
}

export interface FluffyCategories {
  category: CategoryElement;
}

export interface FluffyProfiles {
  profile: PurpleProfile;
}

export interface FluffySelections {
  selection: FluffySelection[] | TentacledSelection;
}

export interface FluffySelection {
  profiles: TentacledProfiles;
  costs: Costs;
  "@_id": string;
  "@_name": string;
  "@_entryId": string;
  "@_number": string;
  "@_type": Type;
  "@_entryGroupId"?: string;
}

export interface TentacledProfiles {
  profile: FluffyProfile;
}

export interface FluffyProfile {
  characteristics: FluffyCharacteristics;
  "@_id": string;
  "@_name": string;
  "@_hidden": string;
  "@_typeId": string;
  "@_typeName": TypeName;
}

export interface FluffyCharacteristics {
  characteristic: CharacteristicElement[];
}

export interface TentacledSelection {
  profiles: FluffyProfiles;
  categories?: FluffyCategories;
  costs: Costs;
  "@_id": string;
  "@_name": string;
  "@_entryId": string;
  "@_number": string;
  "@_type": Type;
  "@_page"?: string;
  "@_entryGroupId"?: string;
}

export interface StickySelection {
  profiles?: StickyProfiles;
  categories?: ForceCategories;
  costs: Costs;
  "@_id": string;
  "@_name": string;
  "@_entryGroupId"?: string;
  "@_entryId": string;
  "@_number": string;
  "@_type": Type;
  "@_page"?: string;
}

export interface StickyProfiles {
  profile: FluffyProfile[] | TentacledProfile;
}

export interface TentacledProfile {
  characteristics: TentacledCharacteristics;
  "@_id": string;
  "@_name": string;
  "@_hidden": string;
  "@_typeId": string;
  "@_typeName": TypeName;
}

export interface TentacledCharacteristics {
  characteristic: PurpleCharacteristic;
}
